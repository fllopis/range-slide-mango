// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing loading App Should load App content that loads /page/Home 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
       
      <div
        class="container mt-3"
      >
        <div>
          <div
            class="text-center mt-4"
          >
            <img
              src="../assets/imgs/logo.png"
              width="250px"
            />
            <h1
              class="title"
            >
              Range Picker
            </h1>
          </div>
          <nav
            class="menu__container"
          >
            <a
              class="trans-05"
              href="/"
            >
              Home
            </a>
            <a
              class="trans-05"
              href="/exercise1"
            >
              Exercise1
            </a>
            <a
              class="trans-05"
              href="/exercise2"
            >
              Exercise2
            </a>
          </nav>
        </div>
        <div
          class="mt-4"
        >
          <p>
            Welcome to home of Range Picker test for Mango.
          </p>
          <p>
            This project conssists in two types of range slide picker without using the html input type="range".
          </p>
          <ul>
            <li>
              We need to create the following component: 
              <strong>
                &lt;React /&gt;
              </strong>
            </li>
            <li>
              Using React to create the solution
            </li>
            <li>
              Don't use any CLI to create structure and architecture of the application.
            </li>
            <li>
              This component has two use modes:
            </li>
          </ul>
          <div
            class="row"
          >
            <div
              class="col-6"
            >
              <p>
                <strong>
                  Exercise1:
                </strong>
                 A normal picker with min and max values from Mockable API.
              </p>
              <p>
                <strong>
                  Exercise2:
                </strong>
                 A range picker with some fixed values that provide from an array from Mockable API
              </p>
            </div>
            <div
              class="col-6 text-center"
            >
              <img
                src="../assets/imgs/example-ranges.png"
              />
            </div>
          </div>
          <p />
        </div>
      </div>
       
    </div>
  </body>,
  "container": <div>
     
    <div
      class="container mt-3"
    >
      <div>
        <div
          class="text-center mt-4"
        >
          <img
            src="../assets/imgs/logo.png"
            width="250px"
          />
          <h1
            class="title"
          >
            Range Picker
          </h1>
        </div>
        <nav
          class="menu__container"
        >
          <a
            class="trans-05"
            href="/"
          >
            Home
          </a>
          <a
            class="trans-05"
            href="/exercise1"
          >
            Exercise1
          </a>
          <a
            class="trans-05"
            href="/exercise2"
          >
            Exercise2
          </a>
        </nav>
      </div>
      <div
        class="mt-4"
      >
        <p>
          Welcome to home of Range Picker test for Mango.
        </p>
        <p>
          This project conssists in two types of range slide picker without using the html input type="range".
        </p>
        <ul>
          <li>
            We need to create the following component: 
            <strong>
              &lt;React /&gt;
            </strong>
          </li>
          <li>
            Using React to create the solution
          </li>
          <li>
            Don't use any CLI to create structure and architecture of the application.
          </li>
          <li>
            This component has two use modes:
          </li>
        </ul>
        <div
          class="row"
        >
          <div
            class="col-6"
          >
            <p>
              <strong>
                Exercise1:
              </strong>
               A normal picker with min and max values from Mockable API.
            </p>
            <p>
              <strong>
                Exercise2:
              </strong>
               A range picker with some fixed values that provide from an array from Mockable API
            </p>
          </div>
          <div
            class="col-6 text-center"
          >
            <img
              src="../assets/imgs/example-ranges.png"
            />
          </div>
        </div>
        <p />
      </div>
    </div>
     
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
